/* Title of Guidebook */
"GuideBook..title" = "ビューを配置する";

/* The title of the Welcome Message for the GuideBook */
"GuideBook..WelcomeMessageCreate a unique journal app! 📓💕..title" = "自分だけの日誌Appを作りましょう! 📓💕";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..WelcomeMessageCreate a unique journal app! 📓💕..Paragraph0" = "SwiftUIのさまざまなビューをレイアウトするための基本を学んで、日誌Appに楽しいビューを追加しましょう。準備はいいですか?";

/* Title of step named My Journal */
"GuideBook..Guide0..StepMy Journal..title" = "自分の日誌";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..LearningCenterContent..Paragraph1" = "![](intro-header.png)";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..LearningCenterContent..Paragraph2" = "Appを作成するときに最初に学ぶべきスキルの1つが、[ユーザインターフェイス](glossary://user%20interface)、つまりUIをレイアウトする方法です。UIをレイアウトするときには、主に次の3つのことが必要です:";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..LearningCenterContent..UnorderedList0..Paragraph3" = "[コンテナビュー](glossary://container)を使って、ビューをさまざまな構成で整理すること。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..LearningCenterContent..UnorderedList0..Paragraph4" = "ビューのサイズ、間隔、配置を微調整すること。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..LearningCenterContent..UnorderedList0..Paragraph5" = "問題が起きたときにはビューをデバッグすること。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..LearningCenterContent..Paragraph6" = "このサンプルでは、これら3つのスキルやその他のスキルを学び、そのスキルを使って日誌Appにさまざまなレイアウトのビューを追加します。ビューレイアウトへの旅に出かける準備はいいですか?";

/* title of the guide button */
"GuideBook..Guide0..StepMy Journal..LearningCenterContent..GuideButtonStart Walkthrough..title" = "ガイドを開始";

/* accessibility description for guide button */
"GuideBook..Guide0..StepMy Journal..LearningCenterContent..GuideButtonStart Walkthrough..description" = "ボタンのアクセシビリティの説明";

/* Title for the section of tasks to complete */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..title" = "ビューレイアウトを掘り下げる";

/* Title for task */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..title" = "ビューを整理する";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page0..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page0..Paragraph7" = "ビューはほかのビューを入れて整理する[コンテナ](glossary://container)として機能することができ、ビューの中にあるビューは[サブビュー](glossary://subview)と呼ばれます。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page0..Paragraph8" = "以下の[VStack](doc://com.apple.documentation/documentation/swiftui/vstack)はコンテナビューの例であり、2つの`Circle`（円）サブビューを縦方向に整理しています。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page1..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page1..Paragraph9" = "`VStack`にもう1つ円を追加してみましょう。これでスタック内の円は3つになり、すべての円ビューが小さくなりました。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page1..Paragraph10" = "これは、コンテナ（今回の`VStack`など）が空きスペースを[サブビュー](glossary://subview)に分割するためです。今回の場合は、3つすべての円ビューに必要なサイズがまったく同じであるため、どの円ビューにも同じだけのスペースが提供されます。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page2..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page2..Paragraph11" = "`Shape`ビューは、コンテナビューから提供されたスペース全体を埋めるように広がります。`VStack`内のスペースを等しく共有する必要がある円ビューが3つあるため、それに合わせて円ビューのサイズが変わります。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page2..Paragraph12" = "`Capsule()`または`Ellipse()`を追加するとどうなるか見てみましょう。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page3..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page3..Paragraph13" = "[HStack](doc://com.apple.documentation/documentation/swiftui/hstack)を使って、ビューを横方向に整理することもできます。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page3..Paragraph14" = "`VStack`の中の円ビューの下に、ビューを横方向に整理する`HStack`コンテナを追加します:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page3..CodeBlock0" = "HStack {\n    Rectangle()\n    Rectangle()\n    Rectangle()\n}\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page4..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page4..Paragraph15" = "[ZStack](doc://com.apple.documentation/documentation/swiftui/zstack)を使って、ビューを積み重ねて整理することもできます。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page4..Paragraph16" = "このコードを`HStack`の下に追加してから、図形ビューが入っているスタックの種類を変えて、レイアウトがどう変わるか見てみましょう。";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page4..CodeBlock1" = "ZStack {\n    Circle()\n        .foregroundColor(.blue)\n    Circle()\n        .inset(by: 40)\n        .foregroundColor(.mint)\n    Text(\"🤩\")\n}\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page5..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page5..Paragraph17" = "スタックの中にほかのスタックを入れることもできます。次の例では、`HStack`の中に2つの`VStack`ビューが入っていて、それぞれの`VStack`に[Image view](doc://com.apple.documentation/documentation/swiftui/image)と`RoundedRectangle()`ビューが入っています。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page5..Paragraph18" = "これをコードに追加して、ビューのレイアウトがどうなるか見てみましょう:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page5..CodeBlock2" = "HStack {\n    VStack {\n        Image(systemName: \"tortoise\")\n        RoundedRectangle(cornerRadius: 10)\n            .foregroundColor(.blue)\n        \n    }\n    VStack {\n        Image(systemName: \"hare\")\n        RoundedRectangle(cornerRadius: 10)\n            .foregroundColor(.brown)\n    }\n}\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page6..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page6..Paragraph19" = "SwiftUIでは、ビューどうしの関係の整理と記録に[ビュー階層](glossary://view%20hierarchy)を使用します。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page7..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..Taskcontainers..Page7..Paragraph20" = "コンテナは`HStack`、`VStack`や`ZStack`ビューだけではありません。さまざまなコンテナで中身をどのように使ってレイアウトするかを調べるには、[中身を入れるコンテナビューを選ぶ](doc://com.apple.documentation/documentation/swiftui/picking-container-views-for-your-content)を参照してください。";

/* Title for task */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskpatternChallenge..title" = "デザインチャレンジ#1: コンテナを使ってレイアウトを一致させる";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskpatternChallenge..Page8..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskpatternChallenge..Page8..Paragraph21" = "ソフトウェアエンジニアは、多くの場合、デザイナーの[UI](glossary://user%20interface)モックアップに一致するようにコードを書く必要があります。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskpatternChallenge..Page8..Paragraph22" = "最初のデザインチャレンジでは、プレビューの下半分に描画された`PatternChallengeView`ボディーをアップデートして、プレビューの上半分と一致させるのがミッションです。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskpatternChallenge..Page8..Paragraph23" = "今すぐ試してみましょう。分からなくなったら、遠慮せずにヒントを参考にしてください。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskpatternChallenge..Page9..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskpatternChallenge..Page9..Paragraph24" = "上半分のモックアップでは、2つの長方形が縦方向に積み重なっているのが分かりますか? コードのこの行をどう編集すれば、プレビューの上半分に表示されているものと一致するでしょうか?";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskpatternChallenge..Page10..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskpatternChallenge..Page10..Paragraph25" = "あなたのデザインの上部にある長方形を、プレビューの上部にある長方形と同じようにするには、強調表示されたコード内の`ZStack`に何を追加すればよいでしょうか?";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskpatternChallenge..Page11..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskpatternChallenge..Page11..Paragraph26" = "2つの円が乗った長方形は、デザインモックアップにかなり近づきました。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskpatternChallenge..Page11..Paragraph27" = "一致させるには、何を変えればいいでしょうか?";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskpatternChallenge..Page12..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskpatternChallenge..Page12..Paragraph28" = "すごい、チャレンジを最後までやりきりましたね! まだ自分のデザインが少しおかしい場合は、デザインモックアップに一致させるためのコードの一例として、このヒントを参照してください:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskpatternChallenge..Page12..CodeBlock3" = "VStack {\n    ZStack {\n        Rectangle()\n            .foregroundColor(.themeBlue)\n        Circle()\n            .foregroundColor(.themePink)\n    }\n    ZStack {\n        Rectangle()\n            .foregroundColor(.themeBlue)\n        HStack {\n            Circle()\n                .foregroundColor(.themeRed)\n            Circle()\n                .foregroundColor(.themeOrange)\n        }\n    }\n}\n\n";

/* Title for task */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..title" = "ビューのサイズを変更して決定する";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page13..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page13..Paragraph29" = "SwiftUIの[ビュー](doc://com.apple.documentation/documentation/swiftui/view)のサイズは、そのビューの[コンテナ](glossary://container)ビューが提供するスペースに基づいて決まります。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page14..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page14..Paragraph30" = "ビューごとに必要なスペースは異なります。どのビューも同じだけのスペースを占めるわけではありません。実験してみましょう! 以下のコードを`HStack`に追加してください:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page14..CodeBlock4" = "//#-learning-code-snippet(3.viewSizing)\nVStack {\n    Image(systemName: \"ladybug\")\n    Text(\"I’m squished\")\n}\nRectangle()\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page15..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page15..Paragraph31" = "`Text`ビューとてんとう虫がつぶれたのに気付きましたか? プレビューをどれだけ大きくしても、`Text`ビューと`Image`ビューはちょうど必要なだけのスペースしか占めませんが、長方形は`HStack`内の残りのスペースをすべて埋めてしまいます。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page15..Paragraph32" = "もう1つ実験してみましょう。この`Rectangle()`を、`HStack`内の`VStack`の上に追加してください:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page15..CodeBlock5" = "Rectangle()\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page16..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page16..Paragraph33" = "`Rectangle`ビューは占めるスペースが調整されますが、`Text`と`Image`はまったく同じサイズのままです。おかしいですね?";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page16..Paragraph34" = "ビューは1つ1つ異なるため、コンテナ内で必要なスペースはビューの種類ごとに違います。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page17..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page17..Paragraph35" = "ビューには魔法のようなところがあり、一部の種類のビューは、コンテナ内に配置されると自動的にサイズ調整を行います:";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page17..UnorderedList1..Paragraph36" = "広がって空きスペースを埋める、`Rectangle`やその他の[Shapes](doc://com.apple.documentation/documentation/swiftui/shape)など。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page17..UnorderedList1..Paragraph37" = "コンテンツがちょうど収まるようにサイズが決まる。`Text(“Supercalifragilisticexpialidocious”)`や`Image(\"myCoolImage\")`など。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page17..UnorderedList1..Paragraph38" = "変化しない特定のサイズが保たれる。[Stepper](doc://com.apple.documentation/documentation/swiftui/stepper)など。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page18..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page18..Paragraph39" = "`Text`または`Rectangle`ビューに必要なスペースを調整するには、どちらのビューの占めるスペースを増やすか指定します。`.frame`修飾子を、`Text`、`Image`、および`Rectangle`ビューに1つずつ追加して、それぞれのビューがどのように変わるか見てみましょう:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page18..CodeBlock6" = ".frame(width: 150)\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page19..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page19..Paragraph40" = "[フレーム修飾子](doc://com.apple.documentation/documentation/SwiftUI/View/frame(width:height:alignment:))を使うと、ビューのサイズを調整することができます。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page19..Paragraph41" = "`Rectangle`ビューの1つに`height`パラメータを追加して、どう変わるか見てみましょう:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page19..CodeBlock7" = ".frame(width: 100, height: 200)\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page20..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page20..Paragraph42" = "`width`と`height`に固定値を指定すると、ビューの適応性が制限されます。🙃";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page20..Paragraph43" = "ビューの最大、最小、または理想的な幅と高さを指定する方がよい方法といえます。この方法だと、コンテナ内の使用可能な領域のサイズに基づいて、ビューのサイズを必要に応じて変更できます。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page20..Paragraph44" = "これらの修飾子のいずれかを`Image`ビューに追加します:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page20..CodeBlock8" = ".frame(minWidth: 100, maxHeight: 200)\n";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page20..CodeBlock9" = ".frame(maxWidth: 50)\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page21..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page21..Paragraph45" = "`frame`を`Image`ビューに追加しても、てんとう虫の実際のサイズが変わらないことに気付いたかもしれません。これは、イメージのサイズを変えたい場合はイメージに[.resizable](doc://com.apple.documentation/documentation/SwiftUI/Image/resizable(capInsets:resizingMode:))修飾子を追加する必要があるためです。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page21..Paragraph46" = "この修飾子を`Image`と`frame`の間に追加します:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page21..CodeBlock10" = ".resizable()\n";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page21..Paragraph47" = "`resizable`を`frame`のあとに追加すると、コンパイラエラーが発生します。`frame`修飾子を`Image`に適用すると実は新しいビューが作成されるのですが、このビューは`Image`ではないため、resizableメソッドにアクセスできません。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page22..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page22..Paragraph48" = "理想的な幅と高さを追加したのに、てんとう虫が引き伸ばされていることに気付きましたか? イメージの場合は、`frame`の代わりに[scaledToFill()](doc://com.apple.documentation/documentation/swiftui/view/scaledtofill())または[scaledToFit()](doc://com.apple.documentation/documentation/swiftui/menu/scaledtofit())を使う方がよいことが多いです。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page22..Paragraph49" = "`Image`ビューの`frame`を以下のコードで置き換えてください:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page22..CodeBlock11" = ".scaledToFit()\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page23..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page23..Paragraph50" = "`frame`を`Text`ビューに追加しても、ビュー内のテキスト自体は大きくならず、テキストが入っているビューが大きくなったことにも気付いたかもしれません。これでビューに収まるテキストが増えましたが、テキスト自体を大きくしたい場合は、テキストビューに[フォント](doc://com.apple.documentation/documentation/swiftui/font)修飾子を追加することができます。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page23..Paragraph51" = "この修飾子をテキストビューの下に追加して、テキストがどう変わるか見てみましょう:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizing..Page23..CodeBlock12" = ".font(.title)\n";

/* Title for task */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..title" = "デザインチャレンジ#2: ビューのサイズを調整する";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page24..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page24..Paragraph52" = "次のチャレンジをしてみましょう。右側のプレビューを見てください。自分のビューのサイズを調整して、下にある自分のデザインを上のモックアップに一致させられるか、試してみましょう。🧐";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page25..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page25..Paragraph53" = "モックアップの長方形が自分のデザインの長方形よりもずっと小さいことに気付いたかもしれません。`Rectangle`ビューを調整してもう少し小さくするにはどうすればよいでしょうか?";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page26..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page26..Paragraph54" = "困ったら、このヒントを使ってください:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page26..CodeBlock13" = ".frame(maxWidth: 200, maxHeight: 150)\n";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page26..Paragraph55" = "このコードは必ず、両方の`Rectangle`ビューに追加してください。さもないと、デザインがガタガタになってしまいます!";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page27..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page27..Paragraph56" = "バラとハートの`Image`ビューも変える必要があります。バラはスペースにぴったり収まるように拡大する必要があるし、ハートは縮小する必要がありそうですね?";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page27..Paragraph57" = "ビューのサイズ調整について学んだことを使って、ビュー内のイメージを調整してみましょう。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page28..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page28..Paragraph58" = "`Image`ビューのサイズを変えるのに最適な方法を思い出せない場合は、こちらがヒントです:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page28..CodeBlock14" = ".scaledToFit()\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page29..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page29..Paragraph59" = "さて、`.scaledToFit`を使ってバラはコンテナのサイズに合わせて拡大できましたが、ハートはどうでしょう? すでに`scaledToFit`が使われています🤔。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page29..Paragraph60" = "ハートのサイズを微調整するには、どの修飾子を追加すればよいでしょうか?";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page30..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page30..Paragraph61" = "忘れてしまったら、このヒントを使ってください:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page30..CodeBlock15" = ".frame(maxWidth: 50)\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page31..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page31..Paragraph62" = "モックアップのテキストはあなたのデザインよりも太いことが分かります。[フォント](doc://com.apple.documentation/documentation/swiftui/font)のサイズと太さを調整するにはどの修飾子を使えばよいでしょうか?";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page32..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page32..Paragraph63" = "これがフォントを調整する方法の1つです。これを修飾子として`VStack`に追加して、すべての`Text`ビューに適用されるようにします:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page32..CodeBlock16" = ".font(.headline)\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page33..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page33..Paragraph64" = "ビューのサイズ調整のチャンピオンですね! まだレイアウトがおかしい場合は、目標のデザインにするためのコードの一例がこちらです:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskviewSizingChallenge..Page33..CodeBlock17" = "VStack {\n    ZStack {\n        RoundedRectangle(cornerRadius: 10)\n            .foregroundColor(.paleOrange)\n            .frame(maxWidth: 200, maxHeight: 150)\n        VStack {\n            Text(\"Roses are red,\")\n            Image(\"Rose\")\n                .resizable()\n                .scaledToFit()\n                .frame(maxWidth: 50)\n                .foregroundColor(.themeRed)\n            Text(\"violets are blue, \")\n        }\n    }\n    ZStack {\n        RoundedRectangle(cornerRadius: 10)\n            .foregroundColor(.paleOrange)\n            .frame(maxWidth: 200, maxHeight: 150)\n        VStack {\n            Text(\"I just love\")\n            Image(\"Heart\")\n                .resizable()\n                .scaledToFit()\n                .frame(maxWidth: 50)\n                .foregroundColor(.themeRed)\n            Text(\"coding with you!\")\n        }\n    }\n}\n.font(.headline)\n.foregroundColor(.darkBrown)\n";

/* Title for task */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..title" = "ビューの間隔と配置を調整する";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page34..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page34..Paragraph65" = "SwiftUIで配置を指定する方法はいくつかあります。方法の1つは、`HStack`、`VStack`、または`ZStack`の中で`alignment`を指定することです。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page34..Paragraph66" = "`VStack`から`alignment: .leading`パラメータを削除してみましょう。`VStack`は[コンテナビュー](glossary://container)であり、棚と本はサブビューです。そのため、本は画面の右端に揃えられます。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page34..Paragraph67" = "本が中央揃えになったのが分かります。これは、`VStack`内のビューのデフォルトの配置が中央揃えであるためです。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page35..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page35..Paragraph68" = "では、もう一段を追加して、その段では棚の右端に本を揃えたい場合はどうすればよいでしょうか?";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page35..Paragraph69" = "1つの方法は、`VStack`をもう1つ追加して、配置を`.trailing`（末尾）に設定することです。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page35..Paragraph70" = "このコードを、`VStack`の中の`Rectangle`の下に追加します`:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page35..CodeBlock18" = "VStack (alignment: .trailing){\n    Image(systemName: \"books.vertical.fill\")\n        .font(.system(size: 40))\n        \n    Rectangle()\n        .frame(maxWidth: .infinity, maxHeight: 10)\n}\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page36..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page36..Paragraph71" = "注意: 縦方向スタックでは、横方向の配置（例: `.leading`または`.trailing`）のみ設定できます。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page36..Paragraph72" = "同様に、横方向スタックでは、縦方向の配置（例: `.top`または`.bottom`）のみ設定できます。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page37..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page37..Paragraph73" = "棚の反対側に本を揃えるもう1つの方法は、`frame`修飾子を使って`alignment`を指定することです。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page37..Paragraph74" = "最後の`VStack`の下にこのコードを追加します:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page37..CodeBlock19" = "Image(systemName: \"books.vertical.fill\")\n    .font(.system(size: 40))\n    /*#-code-walkthrough(5.frameAlignmentExplain)*/\n    .frame(maxWidth: .infinity, alignment: .trailing)\n    /*#-code-walkthrough(5.frameAlignmentExplain)*/\n    //#-learning-code-snippet(5.frameAlignmentExplain)\n\nRectangle()\n    .frame(maxWidth: .infinity, maxHeight: 10)\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page38..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page38..Paragraph75" = "本の周囲のフレームが見えるようにするには、`frame`修飾子の下に背景色を追加します。";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page38..CodeBlock20" = ".background(Color.yellow)\n";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page38..Paragraph76" = "`maxWidth`を`.infinity`に設定すると、`Image`ビューが横方向に引き伸ばされて空きスペースを埋め尽くすようになります。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page38..Paragraph77" = "`alignment`パラメータを`.trailing`に設定すると、`frame`のコンテンツが`.trailing`（末尾の）エッジに揃います。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page39..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page39..Paragraph78" = "でもちょっと待ってください。これだけではありません! [Spacer](doc://com.apple.documentation/documentation/swiftui/spacer)を使っても、同じ結果を得ることができます。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page39..Paragraph79" = "このコードを`VStack`内のほかのビューの下に追加して、試してみてください:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page39..CodeBlock21" = "/*#-code-walkthrough(5.SpacerAlignmentExplain)*/\n/*#-code-walkthrough(5.stackSpacing)*/\nHStack {\n/*#-code-walkthrough(5.stackSpacing)*/\n    Spacer()\n    Image(systemName: \"books.vertical.fill\")\n        .font(.system(size: 40))\n        .background(Color.yellow)\n    //#-learning-code-snippet(5.addBook)\n}\n.background(Color.mint)\n/*#-code-walkthrough(5.SpacerAlignmentExplain)*/\n\nRectangle()\n    .frame(maxWidth: .infinity, maxHeight: 10)\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page40..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page40..Paragraph80" = "`Image`ビューの背景色で段全体が塗りつぶされなくなったのが分かりますか? これは、`HStack`内の`Spacer`を追加することでスタックが広がって横方向の空きスペースを埋め尽くし、`Image`ビューを`.trailing`（末尾の）エッジまで押しやるためです。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page41..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page41..Paragraph81" = "最後の棚にもう1冊本を追加してみましょう。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page41..Paragraph82" = "このコードをもう一方の`Image`の下にある`HStack`の中に追加します`:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page41..CodeBlock22" = "Image(systemName: \"books.vertical.fill\")\n    .font(.system(size: 40))\n    //#-learning-code-snippet(5.padding)\n";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page41..Paragraph83" = "`Spacer`で埋まるのが、`HStack`内の空きスペースだけになったのが分かりますか?";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page42..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page42..Paragraph84" = "本を配置する3つの方法を学びました:";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page42..UnorderedList2..Paragraph85" = "コンテナ表示でalignment（配置）パラメータを使う";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page42..UnorderedList2..Paragraph86" = "alignmentパラメータでframe修飾子を追加する";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page42..UnorderedList2..Paragraph87" = "`Spacer`を使用してビューを配置する";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page42..Paragraph88" = "ビューや状況の種類によって、さまざまなテクニックが必要です。ビューのサイズと間隔については、[Laying Out a Simple View](doc://com.apple.documentation/documentation/swiftui/laying-out-a-simple-view)を参照してください。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page43..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page43..Paragraph89" = "本どうしをさらに離して配置したい場合はどうすればよいでしょうか?";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page43..Paragraph90" = "`HStack`内の間隔を指定してみましょう`:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page43..CodeBlock23" = "HStack(spacing: 20)\n";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page43..Paragraph91" = "これによって、`HStack`内のすべての[サブビュー](glossary://subview)どうしの横方向の間隔が指定されます。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page44..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page44..Paragraph92" = "本をさらにエッジから離して配置したい場合は、本の`.trailing`（末尾の）エッジにパディングを追加することもできます:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page44..CodeBlock24" = ".padding(.trailing, 20)\n";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page44..Paragraph93" = "これによって、本の末尾のエッジにスペースが少し追加されます。`.leading`、`.top`、`.bottom`、`.horizontal`などのその他のパディングのオプションも試してみましょう。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page45..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page45..Paragraph94" = "では、すべての本と棚を画面のエッジから離して配置したい場合はどうすればよいでしょうか?";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page45..Paragraph95" = "棚のすべての段と本に横方向のパディングを追加してもよいでしょうが、それには手間がかかり、維持するのが大変です。その代わりに、修飾子は必ず[コンテナビュー](glossary://container)に適用するのがよいでしょう。今回の場合は、`VStack`がコンテナにあたります。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page45..Paragraph96" = "`padding`修飾子を`VStack`に適用することで、修飾子の追加が1回で済みます。`VStack`内のすべての[サブビュー](glossary://subview)に修飾子を追加する必要はありません。";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page45..CodeBlock25" = ".padding(.horizontal)\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page46..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page46..Paragraph97" = "ですが、本棚の幅を指定したい場合は、`padding`の代わりに`frame`を使います。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page46..Paragraph98" = "フレームの効果をはっきり確認するには、プレビューを画面の半分まで広げて、以下のコードスニペットを挿入します。フレームのあとに`border`を追加することでも、フレームを見えるようにできます。";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page46..CodeBlock26" = ".frame(width: 250)\n.border(Color.black)\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page47..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskalignmentAndSpacing..Page47..Paragraph99" = "やった! これで、自分だけのビューを作成するためのツールがすべて揃いました。";

/* Title for task */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..title" = "ビューをデバッグする";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page48..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page48..Paragraph100" = "SwiftUIビューが期待通りに表示されない場合は、修正するためのデバッグ技術を発揮する必要があります。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page48..Paragraph101" = "まずはプレビューに表示されたビューを見てみましょう。どう見ても、正しく表示されていません! 😩 このビューはどうなるべきか分かりますか?";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page49..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page49..Paragraph102" = "ハートのクイーンのトランプです（そのはずでした😵‍💫）。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page49..Paragraph103" = "名前の通り`HalfCard`には半分のカードが含まれます。`VStack`内で2つの`HalfCard`インスタンスを使ってこのビューを作成します。次に、下の`HalfCard`を上下反転させて、上の`HalfCard`の鏡像を作ります。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page49..Paragraph104" = "上半分と下半分を合わせて、完全なトランプを作成します。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page50..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page50..Paragraph105" = "`HalfCard`ビューに適用されたすべてのコードは、カードの上半分と下半分の両方に影響し、両方の問題を同時に修正することができます。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page50..Paragraph106" = "`HalfCard`ビューに`border`を追加して、半分ずつ見てみましょう:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page50..CodeBlock27" = ".border(Color.green)\n";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page50..Paragraph107" = "ビューに枠線を追加するのはデバッグにとても役立ちます。なぜなら、ビューが占めるスペースの広さが分かるためです。このテクニックを使って、コードの数多くの問題を診断することができます。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page51..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page51..Paragraph108" = "最初の大きな問題は、すべてのグラフィックがつぶれていることです。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page51..Paragraph109" = "`HalfCard`に`frame`を追加して、`maxWidth`と`maxHeight`を`.infinity`に設定します。これによって`frame`が広がり、コンテナ`VStack`が提供するすべての空きスペースが埋まります。";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page51..CodeBlock28" = ".frame(maxWidth: .infinity, maxHeight: .infinity)\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page52..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page52..Paragraph110" = "フレームは広がりましたが、まだすべてのグラフィックがつぶれています。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page52..Paragraph111" = "`frame`修飾子の上にもう1つborder（枠線）を追加します。これによって、`frame`を適用する前の`VStack`の輪郭が分かります。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page52..Paragraph112" = "borderを`frame`の前に適用するかあとに適用するかで、なぜ違いが出るのか不思議に思うかもしれません。これは、修飾子を適用するたびに、実は新しいビューが生成されるためです。そのため、[適用する順番が大事](doc://com.apple.documentation/documentation/swiftui/configuring-views)になります。";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page52..CodeBlock29" = ".border(Color.blue)\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page53..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page53..Paragraph113" = "青と緑の枠線の違いを見てみましょう。青の枠線は`VStack`のつぶれたグラフィックを囲んでいますが、緑の`frame`（枠線）の周囲の空きスペースにまでは広がっていません。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page53..Paragraph114" = "これを修正して、`VStack`のコンテンツが`frame`全体を埋めるようにするにはどうすればよいでしょうか?";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page54..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page54..Paragraph115" = "これらの修飾子の`VStack`での順番を考えてみましょう:";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page54..UnorderedList3..Paragraph116" = "`overlay`を作成して、別の`VStack`を最上位の`VStack`の上に直接重ねます。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page54..UnorderedList3..Paragraph117" = "最上位の`VStack`の`frame`を広げて、周囲に枠線のスペースを空けます。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page54..Paragraph118" = "`overlay`と`frame`の順番を入れ替えたらどうなるでしょうか? その場合は、先に`frame`が広がって余分なスペースが生まれ、そのスペースが収まる`overlay`を適用することができます。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page55..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page55..Paragraph119" = "既存の`frame`を削除して、最上位の`VStack`のすぐ下、`overlay`修飾子の上に、新しい`frame`を追加してみましょう:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page55..CodeBlock30" = ".frame(maxWidth: .infinity, maxHeight: .infinity)\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page56..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page56..Paragraph120" = "ずっとよくなりましたね。あと1つ、修正することがあります。デフォルトでは、`frame`のすべてのコンテンツは中央揃えになっています。ですが、`HalfCard`の中央にある王冠は、`HalfCard`の下端に揃える必要があります。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page56..Paragraph121" = "どうすればそれが実現できるか分かりますか? `border`を追加すると、ビューが必要なスペースの広さを可視化して、目標とするビューの動作と比較できるのを思い出してください。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page57..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page57..Paragraph122" = "`HalfCard`ビューの下端に王冠を揃える方法は2つあります。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page57..Paragraph123" = "`alignment`パラメータを`frame`に追加することができます:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page57..CodeBlock31" = ".frame(maxWidth: .infinity, maxHeight: .infinity, alignment: .bottom)\n";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page57..Paragraph124" = "または、`Spacer`を王冠の上に追加します:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page57..CodeBlock32" = "VStack {\n    Spacer()\n    Image(systemName: \"crown.fill\")\n        .font(.system(size: 80))\n}\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page58..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page58..Paragraph125" = "このカードの配置を修正したので、追加した枠線はすべて削除できます。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page59..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page59..Paragraph126" = "きれいなトランプになりましたね!";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup0..TaskdebuggingViews..Page59..Paragraph127" = "次回、なぜかビューが思い通りに表示されないときは、枠線または背景を追加してビューの問題をデバッグできることを思い出してください。";

/* Title for the section of tasks to complete */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..title" = "日誌Appを拡張する";

/* Title for task */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..title" = "タイトルバナービューを作成する";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page60..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page60..Paragraph128" = "日誌のエントリーのタイトルバナーには、派手な装飾付きでエントリーの名前が表示されます。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page60..Paragraph129" = "例えばあなたがソフトウェアエンジニアで、プレビュー左下のタイトルバナーのデザインを微調整する仕事を任されたとしましょう。チームのデザイナーからは、こういう見た目にしたいというデザイン仕様を渡されました。それが、プレビューの上部に表示されているビューです。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page60..Paragraph130" = "タイトルバナーがプレビュー上半分のデザインモックアップと同じ見た目になるようにがんばってみましょう。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page61..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page61..Paragraph131" = "まずは、左上隅に黄色い円を追加します。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page61..Paragraph132" = "既存の[ZStack](doc://com.apple.documentation/documentation/swiftui/zstack)を使って、青い円の上に`Circle`ビューを配置します。また、`.frame(width:height:)`および`.foregroundColor(_:)`修飾子を使って、円ビューのサイズと色を調整する必要があります。";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page61..CodeBlock33" = "Circle()\n    .frame(width: 15)\n    .foregroundColor(.bannerYellow)\n    //#-learning-code-snippet(4.entryBanner)\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page62..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page62..Paragraph133" = "いいですね! でも、黄色い円が少しずれています。😣";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page62..Paragraph134" = "ビューの位置を調整するには、[offset](doc://com.apple.documentation/documentation/swiftui/view/offset(x:y:))（オフセット）修飾子を黄色い円に追加します。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page62..Paragraph135" = "自分で追加してみましょう。分からなくなったら、以下のヒントを参考にしてください:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page62..CodeBlock34" = ".offset(x: -10, y: -5)\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page63..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page63..Paragraph136" = "すごい! では、イメージと一致するように、オレンジ色の円をバナーの左下に追加してみましょう。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page63..Paragraph137" = "こちらの色を使います: `Color.bannerOrange`。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page63..Paragraph138" = "ヒントが必要なら、次のステップで解決法を説明します。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page64..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page64..Paragraph139" = "オレンジ色の円を追加するには、`Circle`ビューを作成し、`.frame(width:)`、`.foregroundColor(_:)`、および`.offset(x:y:)`修飾子を使ってサイズ、位置、および色を調整します。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page64..Paragraph140" = "まだ困っている場合は、こちらが円のコードです:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page64..CodeBlock35" = "    Circle()\n        .frame(width: 20)\n        .foregroundColor(.bannerOrange)\n        .offset(x: 6, y: 5)\n\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page65..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page65..Paragraph141" = "バナーの左側はいい感じですね。そのレイアウトスキルを、バナーの右側にも使ってみましょう。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page65..Paragraph142" = "今は、大きな青い円と、右側に中くらいのピンク色の円しかありません。小さいオレンジ色の円を追加して、色のアクセントをつけてみましょう。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page66..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page66..Paragraph143" = "バナーの左側では、`ZStack`を使って円ビューを縦に積み重ねました。ここでも同じ方法を試してみましょう。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page67..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page67..Paragraph144" = "オレンジ色の円ビューを追加するためのヒントはこちらです:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page67..CodeBlock36" = "Circle()\n   .frame(width: 18)\n   .foregroundColor(.bannerOrange)\n   .offset(y: 20)\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page68..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page68..Paragraph145" = "完璧です! あなたのデザインはモックアップと一致しました。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..TaskentryBanner..Page68..Paragraph146" = "次は、レイアウトスキルを使って睡眠トラッカーのデザインを変えてみましょう。";

/* Title for task */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..title" = "自分だけの睡眠トラッカービューを作成する";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page69..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page69..Paragraph147" = "次のチャレンジでは、自分だけの睡眠トラッカービューを作成します。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page69..Paragraph148" = "始める前に、Appプレビューを実行して、フルサイズの睡眠トラッカー付きの日誌エントリーを新しく追加してみてください。ハーフサイズの睡眠トラッカーを追加するボタンがオフになっていることが分かります。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page69..Paragraph149" = "チームのデザイナーから、ハーフビューの睡眠トラッカーのカードをこんな見た目にしたいというデザイン仕様を渡されました。ソフトウェアエンジニアのあなたは、作成を始めましょう。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page70..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page70..Paragraph150" = "`SleepViewHalf`プレビューを見てください。ビューの上半分がデザインのモックアップで、下半分をあなたが作成します!";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page70..Paragraph151" = "最初に、カードのサイズを正しくしましょう。`VStack`に`.frame(minHeight:maxHeight:)`修飾子を追加して、最小と最大の高さを設定します。以前にやりましたが、最小高さを設定すると、さまざまな画面サイズに合わせてビューが拡大/縮小して調整されましたね。";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page70..CodeBlock37" = ".frame(minHeight: 100, maxHeight: 200)\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page71..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page71..Paragraph152" = "カードのサイズが同じになったので、今度はカードに2つの状態があることに注目します:";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page71..UnorderedList4..Paragraph153" = "左側には表示状態";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page71..UnorderedList4..Paragraph154" = "右側には編集状態";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page71..Paragraph155" = "睡眠トラッカーにも、この2つの状態が必要です。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page72..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page72..Paragraph156" = "まず表示状態から始めましょう。現時点では、2つの`Text`ビューが`VStack`の中に並んでいます。1つにはタイトルが表示され、もう1つには睡眠時間が表示されています。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page72..Paragraph157" = "プロトタイプとデザインモックアップを比べてみましょう。まだあまり似ていませんね。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page73..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page73..Paragraph158" = "カードタイトルと睡眠時間の値はもっと間隔を空ける必要があります。そのための方法の1つは、睡眠時間の値の上のエッジまたは下のエッジに`.padding()`修飾子を追加することです:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page73..CodeBlock38" = ".padding(.top)\n";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page73..Paragraph159" = "モックアップに近づきましたが、まだ完全には一致していないことが分かります。心配しないでください。これはあとから修正します。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page74..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page74..Paragraph160" = "では今度は編集状態に挑戦してみましょう。編集状態には[Stepper](doc://com.apple.documentation/documentation/swiftui/stepper)があります。ユーザは`Stepper`（ステッパー）で上下の矢印をタップして睡眠時間の値を変更できます。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page74..Paragraph161" = "`if statement`によって、`isEditing`が`true`のときにのみ`Stepper`が表示されます。誰かが日誌のエントリーを編集しているときには`isEditing`の値が`true`になり、それ以外のときの値は`false`です。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page74..Paragraph162" = "以下のコードを`VStack`の一番下に追加します`:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page74..CodeBlock39" = "if isEditing {\n    Stepper(\"Hours Slept\", value: $value, in: 0...12, step: 1)\n        .labelsHidden()\n}\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page75..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page75..Paragraph163" = "`SleepViewHalf`をAppに追加するために、誰かがハーフカードの睡眠トラッカーを選択したときに`SleepViewHalf`を表示するためのロジックを追加します。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page75..Paragraph164" = "強調表示されたコードを削除して、以下のコードスニペットと置き換えてください:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page75..CodeBlock40" = "if size == .small {\n    SleepViewHalf(value: $value, isEditing: isEditing, fontStyle: fontStyle)\n} else {\n    SleepViewFull(value: $value, isEditing: isEditing, fontStyle: fontStyle)\n}\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page76..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page76..Paragraph165" = "ボタンでハーフカードの睡眠トラッカーを追加できるようにするには、`disableSleepViewHalf`を`false`に設定します:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page76..CodeBlock41" = "static var disableSleepViewHalf = false\n";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page76..Paragraph166" = "では、ハーフカードの睡眠トラッカーを日誌AppのAppプレビューに追加してみましょう。これは、“新規エントリー”と“追加”ボタン（+）をタップして新しいカードを作成することで行えます。ハーフカードの睡眠トラッカーボタンが有効になります。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page77..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker1..Page77..Paragraph167" = "よし! これで睡眠トラッカーのハーフカードビューを作り終えました。チームのデザイナーに連絡しましょう。";

/* Title for task */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..title" = "睡眠トラッカービューの最後の仕上げをする";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page78..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page78..Paragraph168" = "すばらしい成果でした! ですが、デザイナーから、あなたのビューとモックアップの細かな違いを指摘されました。Appのデザインを仕上げて終わりにしましょう!";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page78..Paragraph169" = "あらためてモックアップを確認しましょう。どこが違うか分かりますか? プレビューを拡大して、さまざまな画面サイズでカードを表示してみるのもよいでしょう。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page79..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page79..Paragraph170" = "プレビューを画面の半分になるまで拡大しましょう。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page79..Paragraph171" = "カードのタイトルは、誰かが睡眠エントリーを編集しているときには左に揃え、それ以外では中央に揃える必要があります。[3項演算子](glossary://ternary%20conditional%20operator)を使ってそれぞれの状態での配置を指定できます。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page79..Paragraph172" = "以下のコードスニペットを追加して、カードタイトルの配置を修正します:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page79..CodeBlock42" = ".frame(maxWidth: .infinity, alignment: isEditing ? .leading : .center)\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page80..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page80..Paragraph173" = "デザイン仕様で、ユーザが編集状態のときにはこのカードのタイトルが“How many hours did you sleep?”になっているのに気付きましたか?";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page80..Paragraph174" = "以下のコードスニペットをコピーして、強調表示されたテキストと置き換えてください:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page80..CodeBlock43" = "Text(isEditing ? \"How many hours did you sleep?\" : \"Hours Slept\")\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page81..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page81..Paragraph175" = "とてもいい感じですが、表示状態では、カードタイトルをカードの上部に押しやる必要があります。そのためには、[Spacer](doc://com.apple.documentation/documentation/swiftui/spacer)を追加します。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page81..Paragraph176" = "自分で`Spacer`（スペーサー）を追加できるか試してみましょう:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page81..CodeBlock44" = "Spacer()\n";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page81..Paragraph177" = "困ったら、“次へ”をタップしてください。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page82..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page82..Paragraph178" = "`Spacer`を`VStack`に追加すると、スペーサーが広がって縦方向の空きスペースを埋めます。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page82..Paragraph179" = "睡眠時間の値の上および下に`Spacer`を追加します。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page82..Paragraph180" = "両方のスペーサーが等しく広がるため、睡眠時間の値はカード上で中央揃えのままです。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page83..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page83..Paragraph181" = "以前、カードタイトルと睡眠時間の値の間隔を空けるために`.padding()`修飾子を追加しましたね。睡眠時間の値の周囲に`Spacer`ビューを追加したので、その余分なパディングは不要になりました。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page83..Paragraph182" = "強調表示された`.padding()`を削除して、テキストが中心から外れないようにします。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page84..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page84..Paragraph183" = "睡眠時間の値の周囲に`Spacer`を追加したときには、カードタイトルとステッパーはカードの上のエッジと下のエッジまで押しやられていました。ですが、少しエッジに近すぎましたね。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page84..Paragraph184" = "`VStack`の周囲にパディングを追加して、カードのエッジの周囲に隙間を空けましょう:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page84..CodeBlock45" = ".padding()\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page85..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page85..Paragraph185" = "やった! 完成です。これであなたのカードの見た目がデザイナーのモックアップと完全に一致しました。";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Tasksleeptracker2..Page85..CodeBlock46" = "VStack {\n    Text(isEditing ? \"How many hours did you sleep?\" : \"Hours Slept\")\n        .foregroundColor(.darkBrown)\n        .font(fontStyle.uiFont(15))\n        .frame(maxWidth: .infinity, alignment: isEditing ? .leading : .center)\n    Spacer()\n    \n    Text(\"\\(Int(value))\")\n        .modifier(FontStyle(size: 50))\n\n    Spacer()\n    \n    if isEditing {\n        Stepper(\"Hours Slept\", value: $value, in: 0...12, step: 1)\n            .labelsHidden()\n    }\n}\n.frame(minHeight: 100, maxHeight: 200)\n.padding()\n";

/* Title for task */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..title" = "ムードトラッカービューを修正する";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page86..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page86..Paragraph186" = "おめでとうございます! 今度は、デザインモックアップに合わせてフルカードのムードトラッカーを修正するのが仕事です。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page86..Paragraph187" = "自分でモックアップに一致させてみましょう。必要な場合は以下のヒントを使ってください。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page87..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page87..Paragraph188" = "デザインの間隔と配置はモックアップと違うようです。まずカードの`height`を設定しましょう。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page87..Paragraph189" = "学んできた`Spacer`、`.frame(minHeight:maxHeight:)`、`.padding()`などのさまざまなツールを検討して、どう使えばレイアウトが良くなるか考えてみましょう。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page87..Paragraph190" = "1つのビューをレイアウトするのにもさまざまな方法があり、以下のコードスニペットはあくまで一例であることを忘れないでください:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page87..CodeBlock47" = ".frame(minHeight: 100, maxHeight: 200)\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page88..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page88..Paragraph191" = "`minHeight`（最小高さ）と`maxHeight`（最大高さ）を設定すると、さまざまな画面サイズに合わせてビューが拡大/縮小するようになりましたね。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page89..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page89..Paragraph192" = "睡眠トラッカーと同様に、最大高さを`.infinity`に設定すると、カードタイトルをエッジに押しやることができます。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page89..Paragraph193" = "`HStack`のフレームをもう1つ追加します`:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page89..CodeBlock48" = ".frame(maxHeight: .infinity, alignment: .center)\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page90..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page90..Paragraph194" = "次に、いくつかパディングを追加してカードのタイトルとエッジの間にスペースを空けます。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page90..Paragraph195" = "すべてにまとめて`padding`を追加するには、`VStack`の`frame`修飾子の下に`padding`を追加します:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page90..CodeBlock49" = ".padding()\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page91..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page91..Paragraph196" = "では、カードタイトルの配置に挑戦しましょう。カードタイトルは、誰かが日誌を編集しているときには先頭のエッジに揃え、日誌を表示しているときには中央揃えにします。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page91..Paragraph197" = "これを自分でコーディングしてみましょう。必要な場合は解決方法を参考にしてください:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page91..CodeBlock50" = ".frame(maxWidth: .infinity, alignment: isEditing ? .leading : .center)\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page92..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page92..Paragraph198" = "`maxWidth`を`.infinity`にして`.frame`修飾子を追加すると、`Text`ビューが横方向に広がって、空きスペースを埋め尽くすようになります。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page92..Paragraph199" = "`alignment`パラメータが`SwiftUI`に指示して、編集状態では`frame`内のすべてのコンテンツを先頭のエッジに揃え、表示状態では中央に揃えるようにします。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page93..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page93..Paragraph200" = "プレビューを画面の半分の大きさまで拡大します。すると、編集状態と表示状態の両方で、ビューの中央で絵文字がつぶれていますね?";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page93..Paragraph201" = "これを解決するためのコードを書いてみましょう。分からなくなったら、このヒントを参考にしてください:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page93..CodeBlock51" = ".frame(maxWidth: .infinity, alignment: .center)\n";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page93..Paragraph202" = "編集状態のボタンラベルと、表示状態で絵文字を表示する`ForEach`文にコードを追加します。";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page94..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page94..Paragraph203" = "編集状態で円形ボタンと絵文字の間隔を空けるのはどうでしょうか?";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page94..Paragraph204" = "同じ結果を得るにもさまざまな方法があることを忘れないでください。今までに学んだ修飾子を1つまたは複数使ってスペースを空けてみましょう。";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page94..CodeBlock52" = ".padding(.bottom)\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page95..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page95..Paragraph205" = "`MoodViewFull`をAppに追加するために、誰かがフルカードのムードトラッカーを選択したときに`MoodViewFull`を表示するためのロジックを追加します。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page95..Paragraph206" = "強調表示されたコードを削除して、以下のコードスニペットと置き換えてください:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page95..CodeBlock53" = "if size == .small {\n    MoodViewHalf(value: $value, isEditing: isEditing, fontStyle: fontStyle)\n} else {\n    MoodViewFull(value: $value, isEditing: isEditing, fontStyle: fontStyle)\n}\n";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page96..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page96..Paragraph207" = "ボタンでフルカードのムードトラッカーを追加できるようにするには、`disableMoodViewFull`を`false`に設定します:";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page96..CodeBlock54" = "static var disableMoodViewFull = false\n";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page96..Paragraph208" = "では、フルカードのムードトラッカーを日誌Appに追加してみましょう。さっき作成したビューが表示されていますか?";

/* title for page */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page97..title" = "";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page97..Paragraph209" = "おお! いい感じのムードトラッカーになりましたね! デザイナーの希望通りです。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page97..Paragraph210" = "チャレンジしたければ、さらにカードビューの編集と調整を続けて、自分の好み通りにしてみましょう。";

/* Paragraph Content delivered to the user. The key should give context as to where this is being delivered to the user */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page97..Paragraph211" = "SwiftUIビューレイアウトのエキスパートになるまであと少しです!";

/*  */
"GuideBook..Guide0..StepMy Journal..TaskGroup1..Taskmoodtracker..Page97..CodeBlock55" = "VStack {\n    Text(isEditing ? \"What\'s your mood?\" : \"Mood\")\n        .foregroundColor(.darkBrown)\n        .font(fontStyle.uiFont(15))\n        .frame(maxWidth: .infinity, alignment: isEditing ? .leading : .center)\n    \n    HStack {\n        if isEditing {\n            ForEach(emojis, id: \\.self) { emoji in\n                Button{\n                    value = emoji\n                } label: {\n                    VStack {\n                        Text(emoji)\n                            .font(.system(size: 35))\n                            .frame(maxWidth: .infinity, alignment: .center)\n                            .padding(.bottom)\n                        \n                        Image(systemName: value == emoji ? \"circle.fill\" : \"circle\")\n                            .font(.system(size: 16))\n                            .foregroundColor(.darkBrown)\n                    }\n                }\n            }\n        } else {\n        ForEach(0..<displayEmojis, id:\\.self) { index in\n                Text(value)\n                    .font(.system(size: 50))\n                    .frame(maxWidth: .infinity, alignment: .center)\n            }\n        }\n    }\n    .frame(maxHeight: .infinity, alignment: .center)\n    \n}\n.frame(minHeight: 100, maxHeight: 200)\n.padding()\n";

